#!/usr/bin/env python3
import inquirer
import os
from os import path
import shutil
import sys
import time

CONF_NAME = '.firefox-mod-blur.conf'
RED = '\033[31m'
GREEN = '\033[32m'
YELLOW = '\033[33m'

def color_print(msg, color=''):
    print(f'{color}{msg}\033[39m')

class Menu:
    def __init__(self, base_dir, profile_dir):
        self.base_dir = base_dir
        self.profile_dir = profile_dir
        self.chrome_dir = path.join(self.profile_dir, 'chrome')
        self.conf_path = path.join(self.chrome_dir, CONF_NAME)

    def main(self):
        print('Firefox Mod Blur Installer starts...')
        print()

        if path.exists(self.conf_path):
            choices = ['Manage Mods', 'Manage Themes', 'Update', 'Uninstall', 'Quit']
        else:
            choices = ['Install', 'Quit']

        sel = inquirer.list_input('What do you want to do?', choices=choices)

        if sel == 'Install':
            self.install()
        elif sel == 'Manage Mods':
            self.mods()
        elif sel == 'Manage Themes':
            self.themes()
        elif sel == 'Update':
            self.update()
        elif sel == 'Uninstall':
            self.uninstall()

    def install(self):
        # create chrome/ in profile directory
        if path.exists(self.chrome_dir):
            ts = int(time.time())
            chrome_backup_path = path.join(self.profile_dir, f'chrome.{ts}.bak')

            os.rename(self.chrome_dir, chrome_backup_path)
            color_print(f"'{self.chrome_dir}' already exists, and it was renamed to '{chrome_backup_path}'", YELLOW)

        os.mkdir(self.chrome_dir)

        # create a config file to maintain installed mods & themes
        with open(self.conf_path, 'w') as f:
            f.write('# This file was generated by Firefox Mod Blur Installer. ')
            f.write('You should not modified it by yourself!')

        # copy essential files
        shutil.copy(path.join(self.base_dir, 'userChrome.css'), self.chrome_dir)
        shutil.copy(path.join(self.base_dir, 'userContent.css'), self.chrome_dir)
        shutil.copytree(path.join(self.base_dir, 'image'), path.join(self.chrome_dir, 'image'))

        color_print(f"Successfully installed to '{self.chrome_dir}'!", GREEN)
        print()

        res = inquirer.confirm('Do you want to install any extra mod?', default=True)
        if res:
            self.mods()
        res = inquirer.confirm('Do you want to install any extra theme?', default=True)
        if res:
            self.themes()

        color_print('Remember to set `toolkit.legacyUserProfileCustomizations.stylesheets` to `True` in `about:config`!', YELLOW)

    def mods(self):
        # TODO
        pass

    def themes(self):
        # TODO
        pass

    def update(self):
        # TODO
        pass

    def uninstall(self):
        confirm_to_uninstall = inquirer.confirm('Are you sure you want to uninstalled Firefox Mod Blur?', default=False)
        if not confirm_to_uninstall:
            return
        shutil.rmtree(self.chrome_dir)
        color_print(f"'{self.chrome_dir}' was successfully removed!", GREEN)
        color_print("You have to manually rename 'chrome.xxx.bak/' (if exists) to 'chrome/' for recovering your previous configuration.", YELLOW)

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print(f'Usage: {sys.argv[0]} <Firefox profile directory>')
        exit()

    script_dir = path.dirname(path.realpath(__file__))
    menu = Menu(script_dir, sys.argv[1])
    menu.main()
